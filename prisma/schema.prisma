// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  birthDate DateTime
  email     String
  password  String
  cpf       String?
  address   String?
  createdAt DateTime @default(now())

  accounts     BankAccount[]
  transactions Transaction[]
  categories   Category[]
}

model BankAccount {
  id             String   @id @default(uuid())
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  name           String
  agency         String?
  account        String?
  initialBalance Decimal  @default(0.0)
  createdAt      DateTime @default(now())

  transactions Transaction[]
}

model Category {
  id        String       @id @default(uuid())
  user      User?        @relation(fields: [userId], references: [id])
  userId    String?
  name      String
  type      CategoryType
  createdAt DateTime     @default(now())

  transactions Transaction[]
}

model Transaction {
  id              String          @id @default(uuid())
  user            User            @relation(fields: [userId], references: [id])
  userId          String
  bankAccount     BankAccount?    @relation(fields: [bankAccountId], references: [id])
  bankAccountId   String?
  category        Category?       @relation(fields: [categoryId], references: [id])
  categoryId      String?
  type            TransactionType
  amount          Decimal
  description     String?
  paymentMethod   String?
  transactionDate DateTime
  createdAt       DateTime        @default(now())

  categoryName String?
}

enum TransactionType {
  income
  expense
  transfer
}

enum CategoryType {
  income
  expense
}
